class Person {
	private int weight;
	int age;
	protected int height;
	public String name;
	
	public void setWeight(int wehight)
	{
		this.weight = weight;
	}
	public int getWeight()
	{
		return weight;
	}
}

class Student extends Person{
	public void set()
	{
		age = 30;
		name = "홍길동";
		height = 175;
		setWeight(99);
	}
}


public class InheritanceEx {

	public static void main(String[] args) {
		Student s= new Student();
		s.set();

	}

}

-----------------------------------------------

class A
{
	public A()
	{
		System.out.println("생성자A");
	}
}

class B extends A
{
	public B()
	{
		System.out.println("생성자B");
	}
}
class C extends B
{
	public C()
	{
		System.out.println("생성자C");
	}
}

public class ConstructorEx {

	public static void main(String[] args) {
		C c;
		
		c = new C();
	}

}

-----------------------------------------------

class A
{
	public A()
	{
		System.out.println("생성자A");
	}
	public A(int x)
	{
		System.out.println("매개변수생성자A" + x);
	}
}

class B extends A
{
	public B()
	{
		System.out.println("생성자B");
	}
	public B(int x)
	{
		super(x);
		System.out.println("매개변수생성자B" + x);
	}
}


public class ConstructorEx {

	public static void main(String[] args) {
		B b;
		
		b = new B(5);
	}

}

-----------------------------------------------
class Point
{
	private int x, y;
	public Point()
	{
		this.x=this.y = 0;
	}
	public Point(int x, int y)
	{
		this.x = x; this.y = y;
	}
	public void showPoint()
	{
		System.out.println("(" + x + "," + y + ")");
	}
}

class ColorPoint extends Point
{
	private String color;
	public ColorPoint(int x, int y, String color)
	{
		super(x,y);
		this.color = color;
	}
	public void showColorPoint()
	{
		System.out.print(color);
		showPoint();
	}
}
public class SuperEx {

	public static void main(String[] args) {
		ColorPoint cp = new ColorPoint(5,6,"blue");
		cp.showColorPoint();

	}

}


-----------------------------------------------

class Person
{
	String name;
	String id;
	
	public Person(String name)
	{
		this.name = name;
	}
}

class Student extends Person
{
	String grade;
	String department;
	
	public Student(String name)
	{
		super(name);
	}
}

public class UpcastingEx {

	public static void main(String[] args) {
		Person p;
		Student s= new Student("이재문");
		p = s;
		
		System.out.println(p.name);

	}

}


-----------------------------------------------
class Shape { // 슈퍼 클래스
	public Shape next;
	public Shape() { next = null;}
	
	public void draw() {
		System.out.println("Shape");
	}
}

class Line extends Shape
{
	public void draw()
	{
		System.out.println("Line");
	}
}


class Rect extends Shape 
{
	public void draw() // DAC 2 201
	{
		System.out.println("Rect");
	}
}

class Circle extends Shape {
	public void draw(){
		System.out.println("Circle");
	}
}

public class MethodOverriding Ex {
	static void paint(Shape p){
		p.draw();
	}

	public static void main(String[] args) {
		Line line = new Line(); 
		paint(line); 
		paint(new Shape()); 
		paint(new Line()); 
		paint(new Rect()); 
		paint(new Circle());
	}
}
-----------------------------------------------

public class Using Override { 
	public static void main(String []] args)
	{
		Shape start, last, obj;
		start = new Line();
		last = start;
		obj = new Rect();
		last.next = obj;
		last = obj;
		obj = new Line();
		last.next = obj;
		last = obj;
		obj = new Circle();
		last = obj;
		
		Shape p  = start;
		while(p != null)
		{
			p.draw();
			p = p.next;
		}
	}
}

-----------------------------------------------
